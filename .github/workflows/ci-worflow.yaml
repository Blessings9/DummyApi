name: Build App

env:
  DOTNET_VERSION: '8' 

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build application
        run: dotnet build --configuration Release

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Publish container to GHCR
        run: |
          dotnet publish --os linux --arch x64 \
            /t:PublishContainer \
            -p ContainerRegistry=ghcr.io \
            -p ContainerRepository=${{ github.repository }} \
            -p ContainerImageTag=latest
      - name: Notify Slack
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"✅ Application build completed successfully."}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}
      
      - name: Notify Slack on Failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"❌ Application build failed."}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Login to GHCR
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull latest image
        run: docker pull ghcr.io/blessings9/dummyapi:latest

      - name: Backup currently running container (if exists)
        run: |
          if docker ps -a --format '{{.Names}}' | grep -q '^dummy-api$'; then
            docker commit dummy-api dummyapi:backup
            docker stop dummy-api
            docker rm dummy-api
          fi

      - name: Run updated container
        id: deploy
        run: |
          docker run -d \
            --name dummy-api \
            -p 8000:8080 \
            ghcr.io/blessings9/dummyapi:latest

      - name: Health Check
        id: healthcheck
        run: |
          sleep 10
          if curl -s --fail http://localhost:8000/health; then
            echo "Health check passed."
          else
            echo "Health check failed."
            exit 1
          fi

      - name: Notify Slack - Success
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"username": "GitHub Actions", "icon_url": "https://raw.githubusercontent.com/jmnote/z-icons/master/svg/github.svg", "text": "✅ Application Deployed successfully."}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Rollback on failure
        if: failure()
        run: |
          echo "Rolling back to previous container..."
          docker stop dummy-api || true
          docker rm dummy-api || true
          docker run -d \
            --name dummy-api \
            -p 8000:8080 \
            dummyapi:backup

      - name: Notify Slack - Failure
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"❌ Deployment failed. Rolled back to previous version."}' \
            ${{ secrets.SLACK_WEBHOOK_URL }}